---
export const prerender = false;

import { supabase } from '../../lib/supabase';
import FavoriteButton from '../../components/FavoriteButton.astro';

const { id } = Astro.params;
if (!id) {
  return Astro.redirect('/');
}

// Obtener propiedad desde Supabase
interface Property {
  id: string;
  title: string;
  description?: string;
  price: number;
  city: string;
  address?: string;
  rooms?: number;
  baths?: number;
  area_m2?: number;
  status: string;
  created_at: string;
  property_images?: Array<{ url: string; sort_order?: number }>;
}

let property: Property | null = null;
try {
  const { data, error } = await supabase
    .from('properties')
    .select(`
      *,
      property_images(url, sort_order)
    `)
    .eq('id', id)
    .eq('is_active', true)
    .single();

  if (error) {
    console.error('Error fetching property:', error);
    return Astro.redirect('/');
  }
  
  property = data;
} catch (error) {
  console.error('Error fetching property:', error);
  return Astro.redirect('/');
}

// Si no se encuentra la propiedad, redirigir
if (!property) {
  return Astro.redirect('/');
}

function firstImg(arr: Array<{ url: string; sort_order?: number }> | null | undefined): string { 
  if (!arr || !arr.length) return ''; 
  return arr.sort((a, b) => (a.sort_order ?? 0) - (b.sort_order ?? 0))[0].url;
}

const brand = import.meta.env.PUBLIC_BRAND_NAME || 'LLAVE';
---

<html lang="es">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>{property.title} · {brand}</title>
    <style>
      :root {
        --primary: #EB9561;
        --primary-light: #F2B085;
        --primary-dark: #D17A3F;
        --secondary: #2D3748;
        --accent: #F7FAFC;
        --text-primary: #1A202C;
        --text-secondary: #4A5568;
        --text-muted: #718096;
        --surface: #FFFFFF;
        --surface-elevated: #F7FAFC;
        --border: #E2E8F0;
        --shadow: rgba(235, 149, 97, 0.1);
        --shadow-lg: rgba(235, 149, 97, 0.15);
      }
    </style>
  </head>
  <body class="min-h-screen bg-gray-50">
    <!-- Header - Material Design App Bar -->
    <header class="bg-white sticky top-0 z-40 shadow-sm border-b border-gray-100">
      <div class="max-w-7xl mx-auto px-6 py-4">
        <div class="flex justify-between items-center">
          <!-- Logo Section -->
          <div class="flex items-center gap-3">
            <a href="/" class="flex items-center gap-3">
              <div class="w-10 h-10 rounded-lg flex items-center justify-center shadow-sm" style="background: var(--primary);">
                <span class="text-white font-bold text-lg">L</span>
              </div>
              <div class="text-2xl font-bold" style="color: var(--text-primary);">{brand}</div>
            </a>
          </div>
          
          <!-- Back Button -->
          <a href="/resultados" class="inline-flex items-center gap-2 px-4 py-2 rounded-lg text-sm font-medium text-gray-600 hover:bg-gray-100 transition-colors duration-200">
            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18"></path>
            </svg>
            Volver a resultados
          </a>
        </div>
      </div>
    </header>

    <main class="max-w-7xl mx-auto px-6 py-8">
      <!-- Property Header -->
      <div class="mb-8">
        <div class="flex items-start justify-between mb-4">
          <div>
            <h1 class="text-4xl font-bold mb-2" style="color: var(--text-primary);">{property.title}</h1>
            <div class="flex items-center text-gray-600 mb-4">
              <svg class="w-5 h-5 mr-2" style="color: var(--primary);" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"></path>
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"></path>
              </svg>
              <span class="text-lg">{property.address} · {property.city}</span>
            </div>
          </div>
          
          <!-- Status Badge -->
          <div class="px-4 py-2 rounded-full text-sm font-medium text-white shadow-sm" style="background: var(--primary);">
            {property.status === 'venta' ? 'Venta' : 'Alquiler'}
          </div>
        </div>
        
        <!-- Price and Favorite -->
        <div class="flex items-center justify-between mb-6">
          <div class="text-4xl font-bold" style="color: var(--primary);">
            {new Intl.NumberFormat('es-ES',{style:'currency',currency:'EUR'}).format(Number(property.price||0))}
          </div>
          <FavoriteButton propertyId={property.id} />
        </div>
      </div>

      <!-- Main Content -->
      <div class="grid lg:grid-cols-3 gap-8">
        <!-- Left Column -->
        <div class="lg:col-span-2 space-y-8">
          <!-- Main Image -->
          <div class="bg-white rounded-xl shadow-sm border border-gray-100 overflow-hidden">
            <img 
              src={firstImg(property.property_images)} 
              alt={property.title} 
              class="w-full h-96 object-cover hover:scale-105 transition-transform duration-300"
            />
          </div>
          
          <!-- Description -->
          {property.description && (
            <div class="bg-white rounded-xl shadow-sm border border-gray-100 p-6">
              <h2 class="text-2xl font-semibold mb-4" style="color: var(--text-primary);">Descripción</h2>
              <p class="text-gray-700 leading-relaxed text-lg">{property.description}</p>
            </div>
          )}

          <!-- Features Grid -->
          <div class="bg-white rounded-xl shadow-sm border border-gray-100 p-6">
            <h2 class="text-2xl font-semibold mb-6" style="color: var(--text-primary);">Características</h2>
            <div class="grid grid-cols-2 md:grid-cols-4 gap-4">
              <div class="text-center p-4 rounded-lg hover:bg-gray-50 transition-colors duration-200">
                <div class="w-12 h-12 rounded-lg flex items-center justify-center mx-auto mb-3 shadow-sm" style="background: var(--primary);">
                  <svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2H5a2 2 0 00-2-2z"></path>
                  </svg>
                </div>
                <div class="text-2xl font-bold" style="color: var(--text-primary);">{property.rooms}</div>
                <div class="text-sm text-gray-600">Habitaciones</div>
              </div>
              
              <div class="text-center p-4 rounded-lg hover:bg-gray-50 transition-colors duration-200">
                <div class="w-12 h-12 rounded-lg flex items-center justify-center mx-auto mb-3 shadow-sm" style="background: var(--primary);">
                  <svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 14v3m4-3v3m4-3v3M3 21h18M3 10h18M3 7l9-4 9 4M4 10h16v11H4V10z"></path>
                  </svg>
                </div>
                <div class="text-2xl font-bold" style="color: var(--text-primary);">{property.baths}</div>
                <div class="text-sm text-gray-600">Baños</div>
              </div>
              
              <div class="text-center p-4 rounded-lg hover:bg-gray-50 transition-colors duration-200">
                <div class="w-12 h-12 rounded-lg flex items-center justify-center mx-auto mb-3 shadow-sm" style="background: var(--primary);">
                  <svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 8V4m0 0h4M4 4l5 5m11-1V4m0 0h-4m4 0l-5 5M4 16v4m0 0h4m-4 0l5-5m11 5l-5-5m5 5v-4m0 4h-4"></path>
                  </svg>
                </div>
                <div class="text-2xl font-bold" style="color: var(--text-primary);">{property.area_m2}</div>
                <div class="text-sm text-gray-600">m²</div>
              </div>
              
              <div class="text-center p-4 rounded-lg hover:bg-gray-50 transition-colors duration-200">
                <div class="w-12 h-12 rounded-lg flex items-center justify-center mx-auto mb-3 shadow-sm" style="background: var(--primary);">
                  <svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                  </svg>
                </div>
                <div class="text-lg font-bold" style="color: var(--text-primary);">{property.status === 'venta' ? 'Venta' : 'Alquiler'}</div>
                <div class="text-sm text-gray-600">Estado</div>
              </div>
            </div>
          </div>

          <!-- Image Gallery -->
          {property.property_images && property.property_images.length > 1 && (
            <div class="bg-white rounded-xl shadow-sm border border-gray-100 p-6">
              <h2 class="text-2xl font-semibold mb-6" style="color: var(--text-primary);">Galería de imágenes</h2>
              <div class="grid grid-cols-2 md:grid-cols-3 gap-4">
                {property.property_images.slice(1).map((img) => (
                  <div class="relative overflow-hidden rounded-lg cursor-pointer hover:shadow-md transition-shadow duration-200">
                    <img 
                      src={img.url} 
                      alt={property.title} 
                      class="w-full h-32 object-cover hover:scale-105 transition-transform duration-300"
                      onclick={`showImageModal('${img.url}')`}
                    />
                  </div>
                ))}
              </div>
            </div>
          )}
        </div>

        <!-- Right Sidebar -->
        <div class="lg:col-span-1">
          <div class="bg-white rounded-xl shadow-sm border border-gray-100 p-6 sticky top-24">
            <h3 class="text-lg font-semibold mb-6" style="color: var(--text-primary);">Contactar</h3>
            
            <button 
              class="w-full py-3 px-4 rounded-lg text-sm font-medium text-white shadow-sm hover:shadow-md transition-all duration-200 mb-6"
              style="background: var(--primary);"
              onclick={`showInquiryModal('${property.id}', '${property.title}')`}
            >
              Consultar sobre esta propiedad
            </button>

            <div class="space-y-4 text-sm">
              <div class="flex items-center gap-3">
                <div class="w-8 h-8 rounded-lg flex items-center justify-center bg-gray-100">
                  <svg class="w-4 h-4 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"></path>
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"></path>
                  </svg>
                </div>
                <div>
                  <div class="font-medium" style="color: var(--text-primary);">Dirección</div>
                  <div class="text-gray-600">{property.address}</div>
                </div>
              </div>
              
              <div class="flex items-center gap-3">
                <div class="w-8 h-8 rounded-lg flex items-center justify-center bg-gray-100">
                  <svg class="w-4 h-4 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4"></path>
                  </svg>
                </div>
                <div>
                  <div class="font-medium" style="color: var(--text-primary);">Ciudad</div>
                  <div class="text-gray-600">{property.city}</div>
                </div>
              </div>
              
              <div class="flex items-center gap-3">
                <div class="w-8 h-8 rounded-lg flex items-center justify-center bg-gray-100">
                  <svg class="w-4 h-4 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                  </svg>
                </div>
                <div>
                  <div class="font-medium" style="color: var(--text-primary);">Publicado</div>
                  <div class="text-gray-600">{new Date(property.created_at).toLocaleDateString('es-ES')}</div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </main>

    <!-- Modal de consulta - Material Design -->
    <div id="inquiryModal" class="fixed inset-0 bg-black bg-opacity-50 hidden items-center justify-center z-50 p-4">
      <div class="bg-white rounded-xl shadow-xl max-w-md w-full">
        <!-- Modal Header -->
        <div class="px-6 py-4 border-b border-gray-100">
          <div class="flex items-center justify-between">
            <h3 class="text-lg font-semibold" style="color: var(--text-primary);">Consultar sobre esta propiedad</h3>
            <button 
              onclick="closeInquiryModal()"
              class="w-8 h-8 rounded-lg flex items-center justify-center hover:bg-gray-100 transition-colors duration-200"
            >
              <svg class="w-5 h-5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
              </svg>
            </button>
          </div>
        </div>
        
        <!-- Modal Body -->
        <form id="inquiryForm" onsubmit="submitInquiry(event)" class="px-6 py-6">
          <input type="hidden" id="propertyId" name="property_id" />
          
          <div class="space-y-4">
            <div>
              <label class="block text-sm font-medium mb-2" style="color: var(--text-primary);">Nombre *</label>
              <input 
                type="text" 
                name="name" 
                required 
                class="w-full px-4 py-3 border border-gray-200 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent transition-all duration-200" 
              />
            </div>
            
            <div>
              <label class="block text-sm font-medium mb-2" style="color: var(--text-primary);">Email *</label>
              <input 
                type="email" 
                name="email" 
                required 
                class="w-full px-4 py-3 border border-gray-200 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent transition-all duration-200" 
              />
            </div>
            
            <div>
              <label class="block text-sm font-medium mb-2" style="color: var(--text-primary);">Teléfono</label>
              <input 
                type="tel" 
                name="phone" 
                class="w-full px-4 py-3 border border-gray-200 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent transition-all duration-200" 
              />
            </div>
            
            <div>
              <label class="block text-sm font-medium mb-2" style="color: var(--text-primary);">Mensaje</label>
              <textarea 
                name="message" 
                rows="4" 
                class="w-full px-4 py-3 border border-gray-200 rounded-lg focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent transition-all duration-200 resize-none" 
                placeholder="Cuéntanos qué te interesa saber sobre esta propiedad..."
              ></textarea>
            </div>
          </div>
          
          <!-- Modal Footer -->
          <div class="flex gap-3 mt-6">
            <button 
              type="button" 
              onclick="closeInquiryModal()" 
              class="flex-1 py-3 px-4 border border-gray-200 rounded-lg text-sm font-medium hover:bg-gray-50 transition-colors duration-200"
            >
              Cancelar
            </button>
            <button 
              type="submit" 
              class="flex-1 py-3 px-4 rounded-lg text-sm font-medium text-white shadow-sm hover:shadow-md transition-all duration-200"
              style="background: var(--primary);"
            >
              Enviar consulta
            </button>
          </div>
        </form>
      </div>
    </div>

    <!-- Image Modal -->
    <div id="imageModal" class="fixed inset-0 bg-black bg-opacity-90 hidden items-center justify-center z-50 p-4">
      <div class="relative max-w-4xl max-h-full">
        <button 
          onclick="closeImageModal()"
          class="absolute top-4 right-4 w-10 h-10 rounded-full bg-white/20 backdrop-blur-sm flex items-center justify-center hover:bg-white/30 transition-colors duration-200"
        >
          <svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
          </svg>
        </button>
        <img id="modalImage" src="" alt="" class="max-w-full max-h-full rounded-lg" />
      </div>
    </div>

    <script>
      function showInquiryModal(propertyId: string, propertyTitle: string) {
        const propertyIdElement = document.getElementById('propertyId') as HTMLInputElement;
        const inquiryModal = document.getElementById('inquiryModal');
        if (propertyIdElement && inquiryModal) {
          propertyIdElement.value = propertyId;
          inquiryModal.classList.remove('hidden');
          inquiryModal.classList.add('flex');
        }
      }

      function closeInquiryModal() {
        const inquiryModal = document.getElementById('inquiryModal');
        const inquiryForm = document.getElementById('inquiryForm') as HTMLFormElement;
        if (inquiryModal) {
          inquiryModal.classList.add('hidden');
          inquiryModal.classList.remove('flex');
        }
        if (inquiryForm) {
          inquiryForm.reset();
        }
      }

      function showImageModal(imageUrl: string) {
        const modalImage = document.getElementById('modalImage') as HTMLImageElement;
        const imageModal = document.getElementById('imageModal');
        if (modalImage && imageModal) {
          modalImage.src = imageUrl;
          imageModal.classList.remove('hidden');
          imageModal.classList.add('flex');
        }
      }

      function closeImageModal() {
        const imageModal = document.getElementById('imageModal');
        if (imageModal) {
          imageModal.classList.add('hidden');
          imageModal.classList.remove('flex');
        }
      }

      async function submitInquiry(event: Event) {
        event.preventDefault();
        const form = event.target as HTMLFormElement;
        const formData = new FormData(form);
        const data = Object.fromEntries(formData.entries());

        try {
          const response = await fetch('/api/inquiry', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(data)
          });

          if (response.ok) {
            alert('¡Consulta enviada correctamente! Te contactaremos pronto.');
            closeInquiryModal();
          } else {
            throw new Error('Error al enviar la consulta');
          }
        } catch (error) {
          alert('Error al enviar la consulta. Inténtalo de nuevo.');
          console.error(error);
        }
      }

      // Cerrar modales al hacer clic fuera
      const inquiryModal = document.getElementById('inquiryModal');
      if (inquiryModal) {
        inquiryModal.addEventListener('click', (e) => {
          if ((e.target as HTMLElement).id === 'inquiryModal') {
            closeInquiryModal();
          }
        });
      }

      const imageModal = document.getElementById('imageModal');
      if (imageModal) {
        imageModal.addEventListener('click', (e) => {
          if ((e.target as HTMLElement).id === 'imageModal') {
            closeImageModal();
          }
        });
      }
    </script>
  </body>
</html>
